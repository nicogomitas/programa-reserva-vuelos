spring.application.name=demo
server.port=8080
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Habilitar el compromiso automático de offsets
spring.kafka.consumer.enable-auto-commit=true

# Intervalo de tiempo para el compromiso automático
spring.kafka.consumer.auto-commit-interval=1000


spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Definición de múltiples topics
spring.kafka.topic.notificaciones_compra=notificaciones_compra
spring.kafka.topic.notificaciones_suscripcion=notificaciones_suscripcion
spring.kafka.topic.notificaciones_recordatorio=notificaciones_recordatorio
#spring.kafka.topic-json.name=javaguides_json
